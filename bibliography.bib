@inproceedings{DQBFStateOfArt,
  title     = {What is the state-of-the-art in DQBF solving},
  author    = {Kov{\'a}sznai, Gergely},
  year      = {2016},
  booktitle = {MaCS-16. Joint Conference on Mathematics and Computer Science},
  url       = {http://ceur-ws.org/Vol-2046/kovasznai.pdf}
}

@misc{DQBFStateOfArtTalk,
  title     = {A Survey on DQBF: Formulas, Applications, Solving Approaches},
  author    = {Kov{\'a}sznai, Gergely},
  year      = {2015},
  note      = {Talk given at International Workshop on Quantification -- QUANTIFY 2015},
  URL       = {http://fmv.jku.at/quantify15/Kovasznai_QUANTIFY2015.pdf},
}

@InProceedings{DQBFStateOfArtNew,
  title     = {Dependency Quantified Boolean Formulas: An Overview of Solution Methods and Applications},
  author    = {Scholl, Christoph and Wimmer, Ralf},
%%editor= {Beyersdorff, Olaf and Wintersteiger, Christoph M.},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2018},
  year      = {2018},
%%publisher= {Springer International Publishing},
%%address= {Cham},
  pages     = {3--16},
%%abstract= {Dependency quantified Boolean formulas (DQBFs) as a generalization of quantified Boolean formulas (QBFs) have received considerable attention in research during the last years. Here we give an overview of the solution methods developed for DQBF so far. The exposition is complemented with the discussion of various applications that can be handled with DQBF solving.},
  doi       = {10.1007/978-3-319-94144-8_1},
  %isbn      = {978-3-319-94144-8},
}

@inproceedings{DPLLalgorithm,
  title     = {A DPLL Algorithm for Solving DQBF},
  author    = {Andreas Fr{\"o}hlich and Gergely Kov{\'a}sznai and Armin Biere},
  booktitle = {Pragmatics of SAT (PoS 2012, aff. to SAT 2012)},
  year      = {2012},
}

@InProceedings{dCAQE,
  title     = {Clausal abstraction for DQBF},
  author    = {Tentrup, Leander and Rabe, Markus N.},
%%editor= {Janota, Mikol{\'a}{\v{s}} and Lynce, In{\^e}s},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2019},
  year      = {2019},
%%publisher= {Springer International Publishing},
%%address= {Cham},
  pages     = {388--405},
%%abstract= {Dependency quantified Boolean formulas (DQBF) is a logic admitting existential quantification over Boolean functions, which allows us to elegantly state synthesis problems in verification such as the search for invariants, programs, or winning regions of games. In this paper, we lift the clausal %abstraction algorithm for quantified Boolean formulas (QBF) to DQBF. Clausal %abstraction for QBF is an %abstraction refinement algorithm that operates on a sequence of %abstractions that represent the different quantifier levels. For DQBF we need to generalize this principle to partial orders of %abstractions. The two challenges to overcome are: (1) Clauses may contain literals with incomparable dependencies, which we %address by the recently proposed proof rule called Fork Extension, and (2) existential variables may have spurious dependencies, which we prevent by tracking consistency requirements during the execution. Our implementation {\$}{\$}{\backslash}textsc {\{}dCAQE{\}}{\$}{\$}solves significantly more formulas than the existing DQBF algorithms.},
  doi       = {10.1007/978-3-030-24258-9_27},
  %isbn      = {978-3-030-24258-9},
}

@inproceedings{iDQandDQDIMACS,
  title     = {iDQ: Instantiation-Based DQBF Solving},
  author    = {Andreas Fr{\"o}hlich and Gergely Kov{\'a}sznai and Armin Biere and Helmut Veith},
  booktitle = {POS-14. Fifth Pragmatics of SAT workshop},
%  %editor= {Daniel Le Berre},
%  series    = {EPiC Series in Computing},
%  volume    = {27},
  pages     = {103--116},
  year      = {2014},
%  %publisher = {EasyChair},
%  bibsource = {EasyChair, https://easychair.org},
%  %ISSN= {2398-7340},
%  url       = {https://easychair.org/publications/paper/PRV},
  doi       = {10.29007/1s5k},
}

@INPROCEEDINGS{HQSsimpleAlg,
  title     = {Equivalence checking of partial designs using dependency quantified Boolean formulae},
  author    = {Karina {Gitina} and Sven {Reimer} and Matthias {Sauer} and Ralf {Wimmer} and Christoph {Scholl} and Bernd {Becker}},
  booktitle = {2013 IEEE 31st International Conference on Computer Design (ICCD)},
  year      = {2013},
  pages     = {396-403},
%keywords= {Boolean functions;logic design;equivalence checking;partial designs;dependency quantified Boolean formulae;combinational circuit;linear transformation;PEC;DQBF;quantifier elimination;QBF approximations;Approximation methods;Approximation algorithms;Logic gates;Combinational circuits;Complexity theory;Algorithm design and analysis;System analysis and design},
  doi       = {10.1109/ICCD.2013.6657071},
%%ISSN= {1063-6404},
%%month= {10},
}

@INPROCEEDINGS{HQSquantifierElimination,
  title     = {Solving DQBF through quantifier elimination},
  author    = {Karina {Gitina} and Ralf {Wimmer} and Sven {Reimer} and Matthias {Sauer} and Christoph {Scholl} and Bernd {Becker}},
  booktitle = {2015 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year      = {2015},
%volume= {},
%number= {},
  pages     = {1617-1622},
%keywords= {Boolean functions;computational complexity;optimisation;DQBF;dependency quantified Boolean formulas;quantifier elimination strategy;QBF solver;incomplete combinational circuit verification;NP-complete SAT problem;Logic gates;Syntactics;Benchmark testing;Inverters;Boolean functions;Automation;Europe},
  doi       = {10.7873/DATE.2015.0098},
%%ISSN= {1558-1101},
%%month= {3},
}

@InProceedings{HQSdependencyElimination,
  title     = {From DQBF to QBF by Dependency Elimination},
  author    = {Wimmer, Ralf and Karrenbauer, Andreas and Becker, Ruben and Scholl, Christoph and Becker, Bernd},
%%editor= {Gaspers, Serge and Walsh, Toby},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2017},
  year      = {2017},
%%publisher= {Springer International Publishing},
%%address= {Cham},
  pages     = {326--343},
%%abstract= {In this paper, we propose the elimination of dependencies to convert a given dependency quantified Boolean formula (DQBF) to an equisatisfiable QBF. We show how to select a set of dependencies to eliminate such that we arrive at a smallest equisatisfiable QBF in terms of existential variables that is achievable using dependency elimination. This approach is improved by taking so-called don't-care dependencies into account, which result from the application of dependency schemes to the formula and can be added to or removed from the formula at no cost. We have implemented this new method in the state-of-the-art DQBF solver HQS. Experiments show that dependency elimination is clearly superior to the previous method using variable elimination.},
  %isbn      = {978-3-319-66263-3},
  doi       = {10.1007/978-3-319-66263-3_21},
}

@INPROCEEDINGS{HQSquantifierLocalization,
  title     = {Localizing Quantifiers for DQBF},
  author    = {Aile {Ge-Ernst} and Christoph {Scholl} and Ralf {Wimmer}},
  booktitle = {2019 Formal Methods in Computer Aided Design (FMCAD)},
  year      = {2019},
%volume= {},
%number= {},
  pages     = {184-192},
%keywords= {Boolean functions;logic circuits;prenex form;quantifier localization;Boolean formulas;DQBF benchmarks;Semantics;Syntactics;Boolean functions;Benchmark testing;Transforms;Input variables;Encoding},
  doi       = {10.23919/FMCAD.2019.8894269},
%%ISSN= {2641-8177},
%%month= {10},
}

@INPROCEEDINGS{AIGSolve,
  title     = {An AIG-based QBF-solver using SAT for preprocessing},
  author    = {F. {Pigorsch} and C. {Scholl}},
  booktitle = {Design Automation Conference},
  year      ={2010},
  pages     = {170-175},
%keywords= {binary decision diagrams;Boolean functions;graph theory;logic gates;AIG-based QBF-solver;SAT-solver;quantified boolean formulas;and-inverter graphs;cofactor-based quantifier elimination method;BDD;QBF preprocessing;Data structures;Boolean functions;Data preprocessing;Acceleration;Permission;Binary decision diagrams;Computer aided engineering;Algorithm design and analysis;Councils;Collaborative work;Quantified Boolean Formulas;Boolean Satisfiability},
  doi       = {10.1145/1837274.1837318},
%%ISSN= {0738-100X},
%%month= {6},
}

@InProceedings{iProver,
  title     = {iProver -- An Instantiation-Based Theorem Prover for First-Order Logic (System Description)},
  author    = {Korovin, Konstantin},
%%editor= {Armando, Alessandro and Baumgartner, Peter and Dowek, Gilles},
  booktitle = {Automated Reasoning},
  year      ={2008},
%publisher= {Springer Berlin Heidelberg},
%address= {Berlin, Heidelberg},
  pages     = {292--298},
%abstract= {iProver is an instantiation-based theorem prover which is based on Inst-Gen calculus, complete for first-order logic. One of the distinctive features of iProver is a modular combination of instantiation and propositional reasoning. In particular, any state-of-the art SAT solver can be integrated into our framework. iProver incorporates state-of-the-art implementation techniques such as indexing, redundancy elimination, semantic selection and saturation algorithms. Redundancy elimination implemented in iProver include: dismatching constraints, blocking non-proper instantiations and propositional-based simplifications. In addition to instantiation, iProver implements ordered resolution calculus and a combination of instantiation and ordered resolution. In this paper we discuss the design of iProver and related implementation issues.},
  %isbn      = {978-3-540-71070-7},
  doi       = {10.1007/978-3-540-71070-7_24},
}

@TECHREPORT{FRAIGs,
  title     = {FRAIGs: A unifying representation for logic synthesis and verification},
  author    = {Alan Mishchenko and Satrajit Chatterjee and Robert Brayton},
  institution = {EECS Dept., UC Berkeley},
  %month= {3},
  year      = {2005},
  url       = {https://people.eecs.berkeley.edu/~alanmi/publications/2005/tech05_fraigs.pdf},
}

@InProceedings{HQSpre1,
  title     = {Preprocessing for DQBF},
  author    = {Wimmer, Ralf and Gitina, Karina and Nist, Jennifer and Scholl, Christoph and Becker, Bernd},
%editor= {Heule, Marijn and Weaver, Sean},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2015},
  year      ={2015},
%publisher= {Springer International Publishing},
%address= {Cham},
  pages     = {173--190},
%abstract= {For SAT and QBF formulas many techniques are applied in order to reduce/modify the number of variables and clauses of the formula, before the formula is passed to the actual solving algorithm. It is well known that these preprocessing techniques often reduce the computation time of the solver by orders of magnitude. In this paper we generalize different preprocessing techniques for SAT and QBF problems to dependency quantified Boolean formulas (DQBF) and describe how they need to be adapted to work with a DQBF solver core. We demonstrate their effectiveness both for CNF- and non-CNF-based DQBF algorithms.},
  %isbn      = {978-3-319-24318-4},
  doi       = {10.1007/978-3-319-24318-4_13},
}

@InProceedings{HQSpre2,
  title     = {HQSpre -- An Effective Preprocessor for QBF and DQBF},
  author    = {Wimmer, Ralf and Reimer, Sven and Marin, Paolo and Becker, Bernd},
%editor= {Legay, Axel and Margaria, Tiziana},
  booktitle = {Tools and Algorithms for the Construction and Analysis of Systems},
  year      ={2017},
%publisher= {Springer Berlin Heidelberg},
%address= {Berlin, Heidelberg},
  pages     = {373--390},
%abstract= {We present our new preprocessor HQSpre, a state-of-the-art tool for simplifying quantified Boolean formulas (QBFs) and the first available preprocessor for dependency quantified Boolean formulas (DQBFs). The latter are a generalization of QBFs, resulting from adding so-called Henkin-quantifiers to QBFs. HQSpre applies most of the preprocessing techniques that have been proposed in the literature. It can be used both as a standalone tool and as a library. It is possible to tailor it towards different solver back-ends, e. g., to preserve the circuit structure of the formula when a non-CNF solver back-end is used. Extensive experiments show that HQSpre allows QBF solvers to solve more benchmark instances and is able to decide more instances on its own than state-of-the-art tools. The same impact can be observed in the DQBF domain as well.},
  %isbn      = {978-3-662-54577-5},
  doi       = {10.1007/978-3-662-54577-5_21},
}

@Article{HQSpreJournal,
  title     = {The (D)QBF Preprocessor HQSpre -- Underlying Theory and Its Implementation},
  journal   = {Journal on Satisfiability, Boolean Modeling and Computation},
  author    = {Ralf Wimmer and Christoph Scholl and Bernd Becker},
  year      = {2019},
  volume    = {11},
  pages     = {3--52},
  %editor= {Martina Seidl and Luca Pulina},
  %ISSN= {1574-0617},
  %  url       = {http://jsatjournal.org/volumes/11/},
  %abstract= {Preprocessing turned out to be an essential step for SAT, QBF, and DQBF
  %      solvers to reduce/modify the number of variables and clauses of the formula,
  %      before the formula is passed to the actual solving algorithm.
  %      These preprocessing techniques often reduce the computation time of the solver
  %      by orders of magnitude. In this paper, we present the preprocessor HQSpre that
  %      was developed for Dependency Quantified Boolean Formulas (DQBFs) and
  %      generalizes different preprocessing techniques for SAT and QBF problems to DQBF.
  %      We give a presentation of the underlying theory together with detailed proofs
  %      as well as implementation details contributing to the efficiency of the preprocessor.
  %      HQSpre has been used with obvious success by the winners of the DQBF track, and,
  %      even more interestingly, the QBF tracks of QBFEVAL'18.},
%month = {7},
      doi       = {10.3233/SAT190115},
}

@InProceedings{FastDQBFRefutation,
  author    = {Finkbeiner, Bernd and Tentrup, Leander},
  title     = {Fast DQBF Refutation},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2014},
  year      ={2014},
  pages     = {243--251},
  doi       = {10.1007/978-3-319-09284-3_19},
  %editor= {Sinz, Carsten and Egly, Uwe},
  %publisher= {Springer International Publishing},
  %address= {Cham},
  %isbn      = {978-3-319-09284-3},
}

@inproceedings{PSPACEsubclass,
  title     = {A {PSPACE} Subclass of Dependency Quantified Boolean Formulas and Its Effective Solving},
  author    = {Christoph Scholl and Jie-Hong Roland Jiang and Ralf Wimmer and Aile Ge-Ernst},
  booktitle = {Proceedings of the {AAAI} Conference on Artificial Intelligence},
  %volume    = {33},
  %number    = {1},
  pages     = {1584--1591},
  year      = {2019},
  doi       = {10.1609/aaai.v33i01.33011584},
  %month= {7},
  %publisher= {Association for the Advancement of Artificial Intelligence ({AAAI})},
}

@article{NegationOfDQBFs,
  title     = {Henkin quantifiers and Boolean formulae: A certification perspective of DQBF},
  author    = {Valeriy Balabanov and Hui-Ju Katherine Chiang and Jie-Hong R. Jiang},
  journal   = {Theoretical Computer Science},
  volume    = {523},
  pages     = {86 - 100},
  year      ={2014},
%ISSN= {0304-3975},
  doi       = {10.1016/j.tcs.2013.12.020},
  url       = {http://www.sciencedirect.com/science/article/pii/S0304397513009328},
%keywords= {Henkin quantifier, Quantified Boolean formula, Herbrand function, Skolem function, Resolution, Consensus},
%abstract= {Henkin quantifiers, when applied on Boolean formulae, yielding the so-called dependency quantified Boolean formulae (DQBFs), offer succinct descriptive power specifying variable dependencies. Despite their natural applications to games with incomplete information, logic synthesis with constrained input dependencies, etc., DQBFs remain a relatively unexplored subject however. This paper investigates their basic properties, including formula negation and complement, formula expansion, prenex and non-prenex form conversions, and resolution. In particular, the proposed DQBF formulation is established from a synthesis perspective concerned with Skolem-function models and Herbrand-function countermodels. Also a generalized resolution rule is shown to be sound, but incomplete, for DQBF evaluation.},
}

@InProceedings{prenexingQBFs,
  title     = {Comparing Different Prenexing Strategies for Quantified Boolean Formulas},
  author    = {Egly, Uwe and Seidl, Martina and Tompits, Hans and Woltran, Stefan and Zolda, Michael},
%editor= {Giunchiglia, Enrico and Tacchella, Armando},
  booktitle = {Theory and Applications of Satisfiability Testing},
  year      ={2004},
%publisher= {Springer Berlin Heidelberg},
%address= {Berlin, Heidelberg},
  pages     = {214--228},
%abstract= {The majority of the currently available solvers for quantified Boolean formulas (QBFs) process input formulas only in prenex conjunctive normal form. However, the natural representation of practicably relevant problems in terms of QBFs usually results in formulas which are not in a specific normal form. Hence, in order to evaluate such QBFs with available solvers, suitable normal-form translations are required. In this paper, we report experimental results comparing different prenexing strategies on a class of structured benchmark problems. The problems under consideration encode the evaluation of nested counterfactuals over a propositional knowledge base, and span the entire polynomial hierarchy. The results show that different prenexing strategies influence the evaluation time in different ways across different solvers. In particular, some solvers are robust to the chosen strategies while others are not.},
  %isbn      = {978-3-540-24605-3},
  doi       = {10.1007/978-3-540-24605-3_17},
}

@InProceedings{DQBFProofSystem,
  title     = {A Resolution-Style Proof System for DQBF},
  author    = {Rabe, Markus N.},
%editor= {Gaspers, Serge and Walsh, Toby},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2017},
  year      ={2017},
%publisher= {Springer International Publishing},
%address= {Cham},
  pages     = {314--325},
%abstract= {This paper presents a sound and complete proof system for Dependency Quantified Boolean Formulas (DQBF) using resolution, universal reduction, and a new proof rule that we call fork extension. This opens new avenues for the development of efficient algorithms for DQBF.},
  %isbn      = {978-3-319-66263-3},
  doi       = {10.1007/978-3-319-66263-3_20},
}

@article{BDD,
  title     = {Graph-Based Algorithms for Boolean Function Manipulation},
  author    = {Bryant, Randal E.},
  journal= {IEEE Trans. Comput.},
  %issue_date= {August 1986},
  volume    = {35},
  number    = {8},
 %month= aug,
  year      = {1986},
 %ISSN= {0018-9340},
  pages     = {677--691},
%numpages     = {15},
  doi       = {10.1109/TC.1986.1676819},
%acmid= {6433},
 %publisher= {IEEE Computer Society},
 %address= {Washington, DC, USA},
 %keywords= {Boolean functions, binary decision diagrams, logic design verification, symbolic manipulation, symbolic manipulation, Boolean functions, binary decision diagrams, logic design verification},
}

@misc{BDDdetails,
  title     = {An Introduction to Binary Decision Diagrams},
  author    = {Henrik Reif Andersen},
  note = {Lecture notes for Efficient Algorithms and Programs},
  year      = {1999},
  publisher = {IT University of Copenhagen},
  url       = {https://www.cmi.ac.in/~madhavan/courses/verification-2011/andersen-bdd.pdf},
}

@Inbook{Tseitin,
  title     = {On the Complexity of Derivation in Propositional Calculus},
  author    = {Tseitin, G. S.},
%editor= {Siekmann, J{\"o}rg H. and Wrightson, Graham},
  booktitle = {Automation of Reasoning: 2: Classical Papers on Computational Logic 1967--1970},
  year      = {1983},
%publisher= {Springer Berlin Heidelberg},
%address= {Berlin, Heidelberg},
  pages     = {466--483},
%abstract= {The question of the minimum complexity of derivation of a given formula in classical propositional calculus is considered in this article and it is proved that estimates of complexity may vary considerably among the various forms of propositional calculus. The forms of propositional calculus used in the present article are somewhat unusual, {\textdagger} but the results obtained for them can, in principle, be extended to the usual forms of propositional calculus.},
  %isbn      = {978-3-642-81955-1},
  doi       = {10.1007/978-3-642-81955-1_28},
}

@article{DPLL,
  title     = {A Machine Program for Theorem-Proving},
  author    = {Davis, Martin and Logemann, George and Loveland, Donald},
  journal   = {Commun. ACM},
  year      = {1962},
  volume= {5},
  number= {7},
%ISSN= {0001-0782},
  doi       = {10.1145/368273.368557},
  pages     = {394--397},
}

@Inproceedings{ClausalAbstr,
  title		= {CAQE: A Certifying QBF Solver},
  author	= {Markus N. Rabe and Leander Tentrup},
  booktitle	= {Proceedings of the 15th Conference on Formal Methods in Computer-aided Design (FMCAD'15)},
  %month		= {9},
  pages     = {136--143},
  year 		= {2015},
  doi       = {10.1109/FMCAD.2015.7542263},
}

@online{QBFeval18,
  title     = {QBF Evaluation 2018},
  author    = {Luca Pulina and Martina Seidl},
  year      = {2018},
  url       = {http://www.qbflib.org/event_page.php?year=2018},
  urldate= {2020-03-14},
}

@online{QBFeval19,
  title     = {QBF Evaluation 2019},
  author    = {Luca Pulina and Martina Seidl and Ankit Shukla},
  year      = {2019},
  url       = {http://www.qbflib.org/event_page.php?year=2019},
  urldate   = {2020-03-14},
}